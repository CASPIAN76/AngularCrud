{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(http) {\n    this.http = http;\n    this.usersList = [{\n      id: 1,\n      name: \"Nilesh\",\n      email: \"nilesh@gmail.com\",\n      role: \"Angular developer\"\n    }, {\n      id: 2,\n      name: \"pvr\",\n      email: \"pvr@gmail.com\",\n      role: \"Ract js developer\"\n    }];\n  }\n  getUsers() {\n    return this.usersList;\n  }\n  static #_ = this.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UsersService","constructor","http","usersList","id","name","email","role","getUsers","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\angularCrud\\src\\app\\users.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n import { User } from './user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor( private http:HttpClient) { }\n\n usersList:Array<User>=[\n  {id:1,name:\"Nilesh\" , email :\"nilesh@gmail.com\" ,role:\"Angular developer\" },\n  {id:2,name:\"pvr\" , email :\"pvr@gmail.com\" ,role:\"Ract js developer\" },\n ]\n\n\n\n getUsers(){\n   return  this.usersList\n }\n\n\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAqBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAE1B,KAAAC,SAAS,GAAa,CACrB;MAACC,EAAE,EAAC,CAAC;MAACC,IAAI,EAAC,QAAQ;MAAGC,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAC;IAAmB,CAAE,EAC3E;MAACH,EAAE,EAAC,CAAC;MAACC,IAAI,EAAC,KAAK;MAAGC,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAC;IAAmB,CAAE,CACrE;EALwC;EASzCC,QAAQA,CAAA;IACN,OAAQ,IAAI,CAACL,SAAS;EACxB;EAAC,QAAAM,CAAA,G;qBAbWT,YAAY,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZd,YAAY;IAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}