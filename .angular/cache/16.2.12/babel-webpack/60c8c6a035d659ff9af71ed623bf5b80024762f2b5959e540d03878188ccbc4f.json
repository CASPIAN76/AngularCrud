{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(http) {\n    this.http = http;\n    this.roles = [\"Angular developer\", \"ReactJS Developer\", \"VueJS Developer\"];\n    this.usersList = [{\n      id: 1,\n      name: \"Nilesh\",\n      email: \"nilesh@gmail.com\",\n      role: \"Angular developer\"\n    }, {\n      id: 2,\n      name: \"pvr\",\n      email: \"pvr@gmail.com\",\n      role: \"Ract js developer\"\n    }];\n  }\n  // for userlist\n  getUsers() {\n    return this.usersList;\n  }\n  // for ROLES\n  getRoles() {\n    return this.roles;\n  }\n  //for add user\n  addUser(body) {\n    this.usersList.push(body);\n  }\n  //for deleteuser by id\n  deleteUser(id) {\n    //debugger\n    this.usersList.splice(id - 1, 1);\n    //debugger\n  }\n  static #_ = this.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UsersService","constructor","http","roles","usersList","id","name","email","role","getUsers","getRoles","addUser","body","push","deleteUser","splice","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\angularCrud\\src\\app\\users.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  roles=[\"Angular developer\" , \"ReactJS Developer\" , \"VueJS Developer\"]\n  constructor(private http: HttpClient) { }\n\n  usersList: Array<User> = [\n    { id: 1, name: \"Nilesh\", email: \"nilesh@gmail.com\", role: \"Angular developer\" },\n    { id: 2, name: \"pvr\", email: \"pvr@gmail.com\", role: \"Ract js developer\" },\n  ]\n\n\n// for userlist\n  getUsers() {\n    return this.usersList\n  }\n\n\n  // for ROLES\n  getRoles(){\n    return this.roles\n  }\n\n\n  //for add user\n  addUser(body:User){\n  this.usersList.push(body)\n  }\n \n\n  //for deleteuser by id\n deleteUser(id:number){\n  //debugger\n  this.usersList.splice(id-1, 1)\n  //debugger\n }\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,KAAK,GAAC,CAAC,mBAAmB,EAAG,mBAAmB,EAAG,iBAAiB,CAAC;IAGrE,KAAAC,SAAS,GAAgB,CACvB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAE;IAAmB,CAAE,EAC/E;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAmB,CAAE,CAC1E;EALuC;EAQ1C;EACEC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,SAAS;EACvB;EAGA;EACAM,QAAQA,CAAA;IACN,OAAO,IAAI,CAACP,KAAK;EACnB;EAGA;EACAQ,OAAOA,CAACC,IAAS;IACjB,IAAI,CAACR,SAAS,CAACS,IAAI,CAACD,IAAI,CAAC;EACzB;EAGA;EACDE,UAAUA,CAACT,EAAS;IACnB;IACA,IAAI,CAACD,SAAS,CAACW,MAAM,CAACV,EAAE,GAAC,CAAC,EAAE,CAAC,CAAC;IAC9B;EACD;EAAC,QAAAW,CAAA,G;qBAjCWhB,YAAY,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}